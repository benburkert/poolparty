PoolParty, a tutorial.

To get PoolParty up and running on your very own ec2 instances, you have to do a few things in preparation first.

First, install the gem with:

sudo gem install auser-poolparty -s http://gems.github.com

First, head on over to http://aws.amazon.com and sign up for an account. Make sure you make note of the access key and the secret access key on the access identifiers page. Also, scroll down to the bottom of that page and download your x.509 certificate and the private one as well. You only can generate that once, so make sure you download it immediately. Finally, take note of your account id.

Now, let's get to some PoolParty setup. PoolParty only requires one file, a configuration file. Once you get this setup, PoolParty will do the rest for you, so let's get started editing the config file.

There is a generator in progress, so if by the time you read this and you have the gem installed, type

which poolparty

If you get a response, then the generator has been built and you can skip this section and go right to the next 'using it' section, however, if not or you just want to understand the innerworkings, read on.

config/config.yml
PoolParty makes the guess that your config is in a file and is in config/config.yml in your base project directory. However, this is not necessary if you do not want a configuration file, since all options can be added at runtime using switches on the command-line. That being said, the easiest way is to write a config file.

The minimal config file looks like this:

:access_key: "1XCTNEK1CC5BQXXXXXXX"
:secret_access_key: "Q2qJHP0S2iOKikn9glB+XXXX/XXXXXXXX/XXXXXXX"
:ami: "ami-3057b259"

That's it. However,a more complete one would look more like this:

:app_name: "test_app"
:user_id: "1619-6456-1111"
:access_key: "1XCTNEK1CC5BQXXXXXXX"
:secret_access_key: "Q2qJHP0S2iOKikn9glB+XXXX/XXXXXXXX/XXXXXXX"
:ami: "ami-3057b259"
:size: small
:polling_time: "5.minutes"
:minimum_instances: 2
:maximum_instances: 10
:ec2_dir: "/Users/user/.ec2"
:keypair: user
:os: ubuntu
:host_port: 80
:shared_bucket: "pool-party-app-data"
:environment: production
:contract_when:
  web > 10
  cpu < 0.2
:expand_when:
  cpu > 0.45
  web < 10
  
Most of it should be self-explanatory, but a few points are necessary to describe. ec2_dir and keypair are for your location development machine. If you didn't create a keypair, not to worry, put in anything here. If you did, it's the name of the keypair you added. This is important for working with the instances after you get them up.

If you put in a bucket in the shared_bucket key, the instances will automount that bucket to the /data drive. If you leave it out or don't include it, then it won't. 

The master instance takes care of monitoring the cloud for you. If the the parameters you set in the contract_when and expand_when are met, then the cloud will respond accordingly. Those are based on monitors that are included in PoolParty.

The installation of the required software for PoolParty is taken care of by PoolParty. That being said, PoolParty makes no assumptions of what the cloud's responsibilities will be. See 'Using' later on.

Monitors
The monitors are flexible and extensible. Currently included in PoolParty are monitors that monitor web requests and cpu and memory percentages. Writing a monitor or a plugin are out of the scope of this tutorial, but will be included in future tutorials.

Configuring
It can be tedious setting up just your development machine. This is why PoolParty makes it super easy for you in just one rake task. 

If you are not familiar with ruby, I suggest you look into it, it's a beautiful language. However, PoolParty is language-agnostic, so not to worry.

Create a file in your development directory called Rakefile and add this to it.

require 'rubygems'
require 'poolparty'

PoolParty.include_tasks

That's it, pretty simple and a bunch of tasks are available to you directly!
Your development directory should look like this:

./
  config/
    config.yml
  Rakefile

Now, once you have this setup and your config file setup, you can type

rake dev:setup

That's it and you should be able to type ec2-describe-images (provided you have installed the ec2-api-tools, available here: http://developer.amazonwebservices.com/connect/entry.jspa?externalID=351&categoryID=88) at this point and you are set.

You will find yourself with a .<keypair_name>_pool_keys file in your home directory. Anytime you want to setup a new cloud or simply check on this one, all you have to do is type:

source ~/.<keypair_name>_pool_keys 

and your'll be ready to switch over to editing the new cloud. 

Using:
When it's easy to maintain a cloud, it's even easier to use.

There are two binaries included with PoolParty when you install them. Working with the cloud, you can use the binary: pool. Working with the instance, you can use the binary: instance. 

Start your pool by typing:

pool start

It may take a minute. PoolParty is starting your cloud and configuring the master at this point. You may be asked to confirm an ssh connection. This only happens the first time so other pool commands won't ask you again.

To check on your cloud, simply type:

pool list

and you will be presented with the list of your cloud and their roles

If you want to stop the pool, it's as straightforward as:

pool stop

There are a  other commands you have available to you on the pool site. If you are hosting your master off-site, rather than on EC2, you can type on the master machine:

pool maintain

and it will bootup as the master, watching the other instances in the cloud.

If you want to log into a specific instance, you can do so with the command:

instance ssh -i num

The num is the number in the list from: pool list. It defaults to logging into the master if the number is not supplied.

You have some more options when working with instances. You can 

instance ssh
instance scp src='' dest=''
instance cmd cmd='ls -la'
instance start|stop|install|restart
instance start_maintain

The last command will force the instance to become the new master.

Those are the basics of PoolParty. 

You can check it out at http://poolpartyrb.com/.

If you are interested in active development, check out the source at github at http://github.com/auser/pool-party/tree/master. Active discussion is held here: http://groups.google.com/group/poolpartyrb. Of course, the latest and greatest information will always be released first at http://blog.citrusbyte.com.