#!/usr/bin/ruby
require 'rubygems'
require 'rack'
require 'optparse'
require 'pool_party'

# Set defaults
list = PoolParty::Optioner.parse(ARGV.dup)
options = PoolParty::Application.options(ARGV.dup)
master = PoolParty::Master.new

instance_options = {
  :instance => 0,
  :cmd => "ls -l"
}
OptionParser.new do |op|
  op.on('-I inst', '--instance i', "The instance (default: 0)") {|x| instance_options[:instance] = x}
  op.on('-C cmd', '--command command', "Run this command on the instance (default: 'ls -)") {|x| instance_options[:cmd] = x}
end.parse!(ARGV.dup)

instance = master.get_node(instance_options[:instance])

case list[0]
when "ssh"
  message "Starting cloud"
  instance.ssh
when "cmd"
  message "Stopping cloud"
  instance.ssh instance_options[:cmd]
when "scp"
  master.list
when "restart"
  message "Restarting services"
  instance.restart_with_monit
when "start"
  message "Starting services"
  instance.start_with_monit
when "stop"
  message "Stopping services"
  instance.stop_with_monit
when "install"
  message "Installing services"
  install.install_stack
else
  puts master.list
end