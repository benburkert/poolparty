#!/usr/bin/ruby
require 'rubygems'
$:.unshift(File.join(File.dirname(__FILE__), "lib"))
require 'poolparty'

def display_config_data
  PoolParty.message <<-EOM
Starting #{PoolParty::Application.app_name ? "#{PoolParty::Application.app_name} " : "" }cloud
  On #{PoolParty::Application.ami}
  Minimum instances: #{PoolParty::Application.minimum_instances}
  Maximum instances: #{PoolParty::Application.maximum_instances}
  Polling every: #{PoolParty::Application.polling_time}
  Keypair: #{PoolParty::Application.keypair}
  size: #{PoolParty::Application.size}
  Plugins:
  --------------
#{Dir["#{PoolParty::Application.plugin_dir}/*"].collect {|a| "   #{File.basename(a)}"}.join("\n")}

  EOM
end

# Set defaults
options = PoolParty.options(:optsparse => 
  {:banner => <<-EOU
Usage: pool [OPTIONS] {start | stop | list | maintain | restart | install | configure}
-----------------------------------------------------------------
    EOU
    })

PoolParty.load_plugins
master = PoolParty::Master.new
list = PoolParty::Optioner.parse(ARGV.dup)

case list[0]
when "start"
  display_config_data
  master.start_cloud!
when "show"
  display_config_data
when "grow"
  master.grow_by
when "shrink"
  master.shrink_by
when "install"
  master.install_cloud
when "configure"
  master.configure_cloud
when "stop"
  PoolParty.message "Stopping cloud"
  master.request_termination_of_all_instances  
when "list"
  puts master.list
when "maintain"
  PoolParty.message "Maintaining cloud"
  master.start_monitor!
when "restart"
  PoolParty.message "Restarting cloud"
  master.request_termination_of_all_instances
  master.start_cloud!
else
  puts master.list
end